<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="2" ignored="2" total="14" passed="10" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-09-01T21:10:06 IST" name="Multi Browser Testing" finished-at="2025-09-01T21:10:55 IST" duration-ms="49582">
    <groups>
      <group name="regression">
        <method signature="LoginTest.verifyUserIsAbleToLoginUsingValidCredentials()[pri:0, instance:testscript.LoginTest@2a3b5b47]" name="verifyUserIsAbleToLoginUsingValidCredentials" class="testscript.LoginTest"/>
        <method signature="LoginTest.verifyUserLoginWithInvalidUsernameInvalidPassword()[pri:0, instance:testscript.LoginTest@2a3b5b47]" name="verifyUserLoginWithInvalidUsernameInvalidPassword" class="testscript.LoginTest"/>
        <method signature="LoginTest.verifyUserLoginWithInvalidUsernameValidPassword()[pri:0, instance:testscript.LoginTest@2a3b5b47]" name="verifyUserLoginWithInvalidUsernameValidPassword" class="testscript.LoginTest"/>
        <method signature="LoginTest.verifyUserloginWithValidUsernameInvalidPassword()[pri:0, instance:testscript.LoginTest@2a3b5b47]" name="verifyUserloginWithValidUsernameInvalidPassword" class="testscript.LoginTest"/>
        <method signature="LoginTest.verifyUserIsAbleToLoginUsingValidCredentials()[pri:0, instance:testscript.LoginTest@62ddbd7e]" name="verifyUserIsAbleToLoginUsingValidCredentials" class="testscript.LoginTest"/>
        <method signature="LoginTest.verifyUserLoginWithInvalidUsernameInvalidPassword()[pri:0, instance:testscript.LoginTest@62ddbd7e]" name="verifyUserLoginWithInvalidUsernameInvalidPassword" class="testscript.LoginTest"/>
        <method signature="LoginTest.verifyUserLoginWithInvalidUsernameValidPassword()[pri:0, instance:testscript.LoginTest@62ddbd7e]" name="verifyUserLoginWithInvalidUsernameValidPassword" class="testscript.LoginTest"/>
        <method signature="LoginTest.verifyUserloginWithValidUsernameInvalidPassword()[pri:0, instance:testscript.LoginTest@62ddbd7e]" name="verifyUserloginWithValidUsernameInvalidPassword" class="testscript.LoginTest"/>
      </group> <!-- regression -->
    </groups>
    <test started-at="2025-09-01T21:10:06 IST" name="ChromeTest" finished-at="2025-09-01T21:10:25 IST" duration-ms="18804">
      <class name="testscript.LogoutTest">
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript.LogoutTest@3590fc5b]" started-at="2025-09-01T21:10:06 IST" name="browserInitialization" finished-at="2025-09-01T21:10:09 IST" duration-ms="3365" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method retried="true" signature="verifyUserLogout()[pri:0, instance:testscript.LogoutTest@3590fc5b]" started-at="2025-09-01T21:10:09 IST" name="verifyUserLogout" description="Testcase for verifying logout" finished-at="2025-09-01T21:10:10 IST" duration-ms="219" status="SKIP">
          <exception class="org.apache.poi.openxml4j.exceptions.NotOfficeXmlFileException">
            <message>
              <![CDATA[No valid entries or contents found, this is not a valid OOXML (Office Open XML) file]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.apache.poi.openxml4j.exceptions.NotOfficeXmlFileException: No valid entries or contents found, this is not a valid OOXML (Office Open XML) file
at org.apache.poi.openxml4j.util.ZipArchiveThresholdInputStream.getNextEntry(ZipArchiveThresholdInputStream.java:156)
at org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource.<init>(ZipInputStreamZipEntrySource.java:94)
at org.apache.poi.openxml4j.opc.ZipPackage.<init>(ZipPackage.java:132)
at org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:319)
at org.apache.poi.ooxml.util.PackageHelper.open(PackageHelper.java:59)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:290)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:286)
at utilities.ExcelUtility.getStringData(ExcelUtility.java:21)
at testscript.LogoutTest.verifyUserLogout(LogoutTest.java:16)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
Caused by: java.util.zip.ZipException: Unexpected record signature: 0XB5B9B25F
at org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.getNextZipEntry(ZipArchiveInputStream.java:296)
at org.apache.poi.openxml4j.util.ZipArchiveThresholdInputStream.getNextEntry(ZipArchiveThresholdInputStream.java:152)
... 26 more
]]>
            </full-stacktrace>
          </exception> <!-- org.apache.poi.openxml4j.exceptions.NotOfficeXmlFileException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserLogout -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript.LogoutTest@3590fc5b]" started-at="2025-09-01T21:10:10 IST" name="browserQuit" finished-at="2025-09-01T21:10:10 IST" duration-ms="522" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserLogout status=SKIP method=LogoutTest.verifyUserLogout()[pri:0, instance:testscript.LogoutTest@3590fc5b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript.LogoutTest@3590fc5b]" started-at="2025-09-01T21:10:10 IST" name="browserInitialization" finished-at="2025-09-01T21:10:13 IST" duration-ms="2887" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyUserLogout()[pri:0, instance:testscript.LogoutTest@3590fc5b]" started-at="2025-09-01T21:10:13 IST" name="verifyUserLogout" description="Testcase for verifying logout" finished-at="2025-09-01T21:10:16 IST" duration-ms="2927" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserLogout -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript.LogoutTest@3590fc5b]" started-at="2025-09-01T21:10:16 IST" name="browserQuit" finished-at="2025-09-01T21:10:17 IST" duration-ms="1406" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserLogout status=SUCCESS method=LogoutTest.verifyUserLogout()[pri:0, instance:testscript.LogoutTest@3590fc5b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
      </class> <!-- testscript.LogoutTest -->
      <class name="testscript.LoginTest">
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript.LoginTest@2a3b5b47]" started-at="2025-09-01T21:10:06 IST" name="browserInitialization" finished-at="2025-09-01T21:10:09 IST" duration-ms="3263" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method retried="true" signature="verifyUserIsAbleToLoginUsingValidCredentials()[pri:0, instance:testscript.LoginTest@2a3b5b47]" started-at="2025-09-01T21:10:09 IST" name="verifyUserIsAbleToLoginUsingValidCredentials" description="User Login with Valid Credentials" finished-at="2025-09-01T21:10:10 IST" duration-ms="415" status="SKIP">
          <exception class="java.io.IOException">
            <message>
              <![CDATA[Stream Closed]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.io.IOException: Stream Closed
at java.base/java.io.FileInputStream.available0(Native Method)
at java.base/java.io.FileInputStream.available(FileInputStream.java:415)
at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:351)
at java.base/java.io.FilterInputStream.read(FilterInputStream.java:132)
at java.base/java.io.PushbackInputStream.read(PushbackInputStream.java:182)
at java.base/java.io.FilterInputStream.read(FilterInputStream.java:106)
at org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.fill(ZipArchiveInputStream.java:861)
at org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readFromInflater(ZipArchiveInputStream.java:650)
at org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readDeflated(ZipArchiveInputStream.java:625)
at org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.read(ZipArchiveInputStream.java:528)
at java.base/java.io.FilterInputStream.read(FilterInputStream.java:132)
at org.apache.poi.openxml4j.util.ZipArchiveThresholdInputStream.read(ZipArchiveThresholdInputStream.java:80)
at org.apache.poi.util.IOUtils.toByteArray(IOUtils.java:240)
at org.apache.poi.util.IOUtils.toByteArray(IOUtils.java:203)
at org.apache.poi.openxml4j.util.ZipArchiveFakeEntry.<init>(ZipArchiveFakeEntry.java:82)
at org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource.<init>(ZipInputStreamZipEntrySource.java:98)
at org.apache.poi.openxml4j.opc.ZipPackage.<init>(ZipPackage.java:132)
at org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:319)
at org.apache.poi.ooxml.util.PackageHelper.open(PackageHelper.java:59)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:290)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:286)
at utilities.ExcelUtility.getStringData(ExcelUtility.java:21)
at testscript.LoginTest.verifyUserIsAbleToLoginUsingValidCredentials(LoginTest.java:17)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at org.testng.internal.thread.graph.TestNGFutureTask.run(TestNGFutureTask.java:22)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:842)
]]>
            </full-stacktrace>
          </exception> <!-- java.io.IOException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserIsAbleToLoginUsingValidCredentials -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript.LoginTest@2a3b5b47]" started-at="2025-09-01T21:10:10 IST" name="browserQuit" finished-at="2025-09-01T21:10:10 IST" duration-ms="593" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserIsAbleToLoginUsingValidCredentials status=SKIP method=LoginTest.verifyUserIsAbleToLoginUsingValidCredentials()[pri:0, instance:testscript.LoginTest@2a3b5b47] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript.LoginTest@2a3b5b47]" started-at="2025-09-01T21:10:10 IST" name="browserInitialization" finished-at="2025-09-01T21:10:13 IST" duration-ms="2412" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyUserIsAbleToLoginUsingValidCredentials()[pri:0, instance:testscript.LoginTest@2a3b5b47]" started-at="2025-09-01T21:10:13 IST" name="verifyUserIsAbleToLoginUsingValidCredentials" description="User Login with Valid Credentials" finished-at="2025-09-01T21:10:15 IST" duration-ms="2543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserIsAbleToLoginUsingValidCredentials -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript.LoginTest@2a3b5b47]" started-at="2025-09-01T21:10:15 IST" name="browserQuit" finished-at="2025-09-01T21:10:16 IST" duration-ms="424" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserIsAbleToLoginUsingValidCredentials status=SUCCESS method=LoginTest.verifyUserIsAbleToLoginUsingValidCredentials()[pri:0, instance:testscript.LoginTest@2a3b5b47] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript.LoginTest@2a3b5b47]" started-at="2025-09-01T21:10:16 IST" name="browserInitialization" finished-at="2025-09-01T21:10:18 IST" duration-ms="2035" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyUserLoginWithInvalidUsernameInvalidPassword()[pri:0, instance:testscript.LoginTest@2a3b5b47]" started-at="2025-09-01T21:10:18 IST" name="verifyUserLoginWithInvalidUsernameInvalidPassword" description="User Login with invalid Credentials" finished-at="2025-09-01T21:10:18 IST" duration-ms="749" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserLoginWithInvalidUsernameInvalidPassword -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript.LoginTest@2a3b5b47]" started-at="2025-09-01T21:10:18 IST" name="browserQuit" finished-at="2025-09-01T21:10:19 IST" duration-ms="374" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserLoginWithInvalidUsernameInvalidPassword status=SUCCESS method=LoginTest.verifyUserLoginWithInvalidUsernameInvalidPassword()[pri:0, instance:testscript.LoginTest@2a3b5b47] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript.LoginTest@2a3b5b47]" started-at="2025-09-01T21:10:19 IST" name="browserInitialization" finished-at="2025-09-01T21:10:21 IST" duration-ms="1801" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyUserLoginWithInvalidUsernameValidPassword()[pri:0, instance:testscript.LoginTest@2a3b5b47]" started-at="2025-09-01T21:10:21 IST" name="verifyUserLoginWithInvalidUsernameValidPassword" description="User Login with invalid username and valid password" finished-at="2025-09-01T21:10:21 IST" duration-ms="835" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserLoginWithInvalidUsernameValidPassword -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript.LoginTest@2a3b5b47]" started-at="2025-09-01T21:10:21 IST" name="browserQuit" finished-at="2025-09-01T21:10:22 IST" duration-ms="369" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserLoginWithInvalidUsernameValidPassword status=SUCCESS method=LoginTest.verifyUserLoginWithInvalidUsernameValidPassword()[pri:0, instance:testscript.LoginTest@2a3b5b47] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript.LoginTest@2a3b5b47]" started-at="2025-09-01T21:10:22 IST" name="browserInitialization" finished-at="2025-09-01T21:10:24 IST" duration-ms="1847" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyUserloginWithValidUsernameInvalidPassword()[pri:0, instance:testscript.LoginTest@2a3b5b47]" started-at="2025-09-01T21:10:24 IST" name="verifyUserloginWithValidUsernameInvalidPassword" description="User Login with valid username and invalid password" finished-at="2025-09-01T21:10:24 IST" duration-ms="735" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserloginWithValidUsernameInvalidPassword -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript.LoginTest@2a3b5b47]" started-at="2025-09-01T21:10:24 IST" name="browserQuit" finished-at="2025-09-01T21:10:25 IST" duration-ms="254" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserloginWithValidUsernameInvalidPassword status=SUCCESS method=LoginTest.verifyUserloginWithValidUsernameInvalidPassword()[pri:0, instance:testscript.LoginTest@2a3b5b47] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
      </class> <!-- testscript.LoginTest -->
    </test> <!-- ChromeTest -->
    <test started-at="2025-09-01T21:10:25 IST" name="FirefoxTest" finished-at="2025-09-01T21:10:55 IST" duration-ms="30726">
      <class name="testscript.LoginTest">
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript.LoginTest@62ddbd7e]" started-at="2025-09-01T21:10:25 IST" name="browserInitialization" finished-at="2025-09-01T21:10:31 IST" duration-ms="6665" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyUserIsAbleToLoginUsingValidCredentials()[pri:0, instance:testscript.LoginTest@62ddbd7e]" started-at="2025-09-01T21:10:31 IST" name="verifyUserIsAbleToLoginUsingValidCredentials" description="User Login with Valid Credentials" finished-at="2025-09-01T21:10:32 IST" duration-ms="1080" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserIsAbleToLoginUsingValidCredentials -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript.LoginTest@62ddbd7e]" started-at="2025-09-01T21:10:32 IST" name="browserQuit" finished-at="2025-09-01T21:10:34 IST" duration-ms="1590" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserIsAbleToLoginUsingValidCredentials status=SUCCESS method=LoginTest.verifyUserIsAbleToLoginUsingValidCredentials()[pri:0, instance:testscript.LoginTest@62ddbd7e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript.LoginTest@62ddbd7e]" started-at="2025-09-01T21:10:34 IST" name="browserInitialization" finished-at="2025-09-01T21:10:40 IST" duration-ms="5723" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyUserLoginWithInvalidUsernameInvalidPassword()[pri:0, instance:testscript.LoginTest@62ddbd7e]" started-at="2025-09-01T21:10:40 IST" name="verifyUserLoginWithInvalidUsernameInvalidPassword" description="User Login with invalid Credentials" finished-at="2025-09-01T21:10:40 IST" duration-ms="521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserLoginWithInvalidUsernameInvalidPassword -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript.LoginTest@62ddbd7e]" started-at="2025-09-01T21:10:40 IST" name="browserQuit" finished-at="2025-09-01T21:10:41 IST" duration-ms="898" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserLoginWithInvalidUsernameInvalidPassword status=SUCCESS method=LoginTest.verifyUserLoginWithInvalidUsernameInvalidPassword()[pri:0, instance:testscript.LoginTest@62ddbd7e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript.LoginTest@62ddbd7e]" started-at="2025-09-01T21:10:41 IST" name="browserInitialization" finished-at="2025-09-01T21:10:47 IST" duration-ms="5896" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyUserLoginWithInvalidUsernameValidPassword()[pri:0, instance:testscript.LoginTest@62ddbd7e]" started-at="2025-09-01T21:10:47 IST" name="verifyUserLoginWithInvalidUsernameValidPassword" description="User Login with invalid username and valid password" finished-at="2025-09-01T21:10:48 IST" duration-ms="546" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserLoginWithInvalidUsernameValidPassword -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript.LoginTest@62ddbd7e]" started-at="2025-09-01T21:10:48 IST" name="browserQuit" finished-at="2025-09-01T21:10:49 IST" duration-ms="1018" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserLoginWithInvalidUsernameValidPassword status=SUCCESS method=LoginTest.verifyUserLoginWithInvalidUsernameValidPassword()[pri:0, instance:testscript.LoginTest@62ddbd7e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript.LoginTest@62ddbd7e]" started-at="2025-09-01T21:10:49 IST" name="browserInitialization" finished-at="2025-09-01T21:10:54 IST" duration-ms="5174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyUserloginWithValidUsernameInvalidPassword()[pri:0, instance:testscript.LoginTest@62ddbd7e]" started-at="2025-09-01T21:10:54 IST" name="verifyUserloginWithValidUsernameInvalidPassword" description="User Login with valid username and invalid password" finished-at="2025-09-01T21:10:54 IST" duration-ms="544" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserloginWithValidUsernameInvalidPassword -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript.LoginTest@62ddbd7e]" started-at="2025-09-01T21:10:54 IST" name="browserQuit" finished-at="2025-09-01T21:10:55 IST" duration-ms="1052" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserloginWithValidUsernameInvalidPassword status=SUCCESS method=LoginTest.verifyUserloginWithValidUsernameInvalidPassword()[pri:0, instance:testscript.LoginTest@62ddbd7e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
      </class> <!-- testscript.LoginTest -->
      <class name="testscript.LogoutTest">
        <test-method is-config="true" signature="browserInitialization(java.lang.String)[pri:0, instance:testscript.LogoutTest@74e52ef6]" started-at="2025-09-01T21:10:25 IST" name="browserInitialization" finished-at="2025-09-01T21:10:31 IST" duration-ms="5983" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firefox]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserInitialization -->
        <test-method signature="verifyUserLogout()[pri:0, instance:testscript.LogoutTest@74e52ef6]" started-at="2025-09-01T21:10:31 IST" name="verifyUserLogout" description="Testcase for verifying logout" finished-at="2025-09-01T21:10:33 IST" duration-ms="2107" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyUserLogout -->
        <test-method is-config="true" signature="browserQuit(org.testng.ITestResult)[pri:0, instance:testscript.LogoutTest@74e52ef6]" started-at="2025-09-01T21:10:33 IST" name="browserQuit" finished-at="2025-09-01T21:10:34 IST" duration-ms="1343" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyUserLogout status=SUCCESS method=LogoutTest.verifyUserLogout()[pri:0, instance:testscript.LogoutTest@74e52ef6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- browserQuit -->
      </class> <!-- testscript.LogoutTest -->
    </test> <!-- FirefoxTest -->
  </suite> <!-- Multi Browser Testing -->
</testng-results>
